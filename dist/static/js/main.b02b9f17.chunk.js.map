{"version":3,"sources":["map-context.js","shared/Light_Blue_Circle.svg","shared/CircleIcon.js","Map.js","shared/Utils.js","shared/Button.js","shared/Icon.js","Table/Table.js","Table/TableData.js","scenes/UserData.js","App.js","index.js"],"names":["MapContext","React","createContext","MapProvider","children","useState","value","map","setMapFly","Provider","useMap","context","useContext","undefined","Error","iconCircle","L","Icon","iconUrl","circle","iconSize","Map","markerInfo","style","height","width","display","flexDirection","MapContainer","doubleClickZoom","id","zoom","center","crs","CRS","Simple","whenCreated","theMap","ImageOverlay","url","bounds","Marker","icon","position","Popup","marker","posCoords","ID","margin","textAlign","classNames","classes","filter","Boolean","join","Button","className","rest","type","PageButton","SortIcon","stroke","fill","strokeWidth","viewBox","xmlns","d","SortUpIcon","SortDownIcon","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","setValue","onChange","useAsyncDebounce","class","e","target","placeholder","SelectColumnFilter","column","filterValue","setFilter","preFilteredRows","render","options","useMemo","Set","forEach","row","add","values","name","option","i","LocateCell","onClick","window","scrollTo","top","behavior","flyTo","original","posAccessor","Table","columns","data","useTable","useFilters","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","headerGroup","headers","Filter","getHeaderGroupProps","scope","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","disabled","pageIndex","pageSize","Number","TableData","Header","accessor","Cell","UserData","props","uibuilder","start","feVersion","get","socketConnectedState","serverTimeOffset","msgRecvd","payload","msgsReceived","msgCtrl","msgsControl","msgSent","msgsSent","msgCtrlSent","msgsCtrlSent","newVal","setState","console","info","setTimeout","send","this","Component","App","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.b02b9f17.chunk.js","sourcesContent":["import React, { useState, useContext } from \"react\";\r\n\r\nconst MapContext = React.createContext();\r\n\r\nfunction MapProvider({ children }) {\r\n  const [map, setMapFly] = useState(null);\r\n\r\n  const value = { map, setMapFly };\r\n  return <MapContext.Provider value={value}>{children}</MapContext.Provider>;\r\n}\r\n\r\nfunction useMap() {\r\n  const context = useContext(MapContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useMap must be used within a MapProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { MapProvider, useMap };\r\n","export default __webpack_public_path__ + \"static/media/Light_Blue_Circle.1630ed52.svg\";","import L from 'leaflet';\r\nimport circle from './Light_Blue_Circle.svg';\r\n\r\nconst iconCircle = new L.Icon({\r\n  iconUrl: circle,\r\n  iconSize: [20, 20],\r\n});\r\n\r\nexport default iconCircle;","import React from \"react\";\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  ImageOverlay,\r\n  Marker,\r\n  Popup\r\n} from \"react-leaflet\";\r\nimport { CRS, Icon } from \"leaflet\";\r\nimport { useMap } from \"./map-context\";\r\nimport iconCircle from \"./shared/CircleIcon\"\r\n\r\nfunction Map({ markerInfo }){\r\n  //const [mapFly, setMapFly] = useState(null);\r\n  const { setMapFly } = useMap();\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          height: \"50%\",\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <MapContainer\r\n          doubleClickZoom={false}\r\n          id=\"mapId\"\r\n          zoom={0}\r\n          center={[241, 250]}\r\n          crs={CRS.Simple}\r\n          whenCreated={(theMap) => setMapFly(theMap)}\r\n        >\r\n          <ImageOverlay\r\n            url=\"https://i.imgur.com/kbgtLlk.png\"\r\n            bounds={[\r\n              [0, 0],\r\n              [482.5, 500]\r\n            ]}\r\n          />\r\n\r\n          <Marker icon={iconCircle} position={[50, 330]}>\r\n            <Popup>Beacon 1</Popup>\r\n          </Marker>\r\n          <Marker icon={iconCircle} position={[325, 300]}>\r\n            <Popup>Beacon 2</Popup>\r\n          </Marker>\r\n          <Marker icon={iconCircle} position={[250, 400]}>\r\n            <Popup>Beacon 3</Popup>\r\n          </Marker>\r\n          {/*<Marker position={[200.5, 672.5]}>\r\n            <Popup>WD113</Popup>\r\n          </Marker>\r\n          <Marker position={[260, 900]}>\r\n            <Popup>Single Bed Includision Ward</Popup>\r\n          </Marker>*/}\r\n          {markerInfo.map((marker) => (\r\n            <Marker key={marker.ID} position={marker.posCoords}>\r\n              <Popup>{marker.ID}</Popup>\r\n            </Marker>\r\n          ))\r\n          }\r\n            \r\n        </MapContainer>\r\n      </div>\r\n      <div\r\n        style={{\r\n          flexDirection: \"column\",\r\n          width: \"100px\",\r\n          margin: \"auto\",\r\n          textAlign: \"center\"\r\n        }}\r\n      >\r\n        {/* <MarkerButton btnLabel=\"Transmitter 1\" pos={[260, 900]} map={mapFly} />\r\n        <MarkerButton\r\n          btnLabel=\"Transmitter 2\"\r\n          pos={[200.5, 672.5]}\r\n          map={mapFly}\r\n        /> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","export function classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}","import React from \"react\";\r\nimport { classNames } from \"./Utils\";\r\n\r\nexport function Button({ children, className, ...rest }) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={classNames(\r\n        \"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\",\r\n        className\r\n      )}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport function PageButton({ children, className, ...rest }) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={classNames(\r\n        \"relative inline-flex items-center px-2 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50\",\r\n        className\r\n      )}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}","export function SortIcon({ className }) {\r\n  return (\r\n    <svg\r\n      className={className}\r\n      stroke=\"currentColor\"\r\n      fill=\"currentColor\"\r\n      strokeWidth=\"0\"\r\n      viewBox=\"0 0 320 512\"\r\n      height=\"1em\"\r\n      width=\"1em\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path d=\"M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z\"></path>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function SortUpIcon({ className }) {\r\n  return (\r\n    <svg\r\n      className={className}\r\n      stroke=\"currentColor\"\r\n      fill=\"currentColor\"\r\n      strokeWidth=\"0\"\r\n      viewBox=\"0 0 320 512\"\r\n      height=\"1em\"\r\n      width=\"1em\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path d=\"M279 224H41c-21.4 0-32.1-25.9-17-41L143 64c9.4-9.4 24.6-9.4 33.9 0l119 119c15.2 15.1 4.5 41-16.9 41z\"></path>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport function SortDownIcon({ className }) {\r\n  return (\r\n    <svg\r\n      className={className}\r\n      stroke=\"currentColor\"\r\n      fill=\"currentColor\"\r\n      strokeWidth=\"0\"\r\n      viewBox=\"0 0 320 512\"\r\n      height=\"1em\"\r\n      width=\"1em\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path d=\"M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41z\"></path>\r\n    </svg>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  useTable,\r\n  useGlobalFilter,\r\n  useAsyncDebounce,\r\n  useFilters,\r\n  useSortBy,\r\n  usePagination\r\n} from \"react-table\";\r\nimport {\r\n  ChevronLeftIcon,\r\n  ChevronRightIcon,\r\n  ChevronDoubleRightIcon,\r\n  ChevronDoubleLeftIcon,\r\n  LocationMarkerIcon\r\n} from \"@heroicons/react/solid\";\r\nimport { Button, PageButton } from \"../shared/Button\";\r\nimport { SortDownIcon, SortUpIcon, SortIcon } from \"../shared/Icon\";\r\n//import { classNames } from \"../shared/Utils\";\r\nimport { useMap } from \"../map-context\";\r\n\r\n// Define a default UI for filtering\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <label className=\"flex gap-x-2 items-baseline\">\r\n      <span className=\"text-gray-700\">Search: </span>\r\n      <input\r\n        type=\"text\"\r\n        class=\"mt-1 block rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n        value={value || \"\"}\r\n        onChange={(e) => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n        placeholder={`${count} records...`}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\n// This is a custom filter UI for selecting\r\n// a unique option from a list\r\nexport function SelectColumnFilter({\r\n  column: { filterValue, setFilter, preFilteredRows, id, render }\r\n}) {\r\n  // Calculate the options for filtering\r\n  // using the preFilteredRows\r\n  const options = React.useMemo(() => {\r\n    const options = new Set();\r\n    preFilteredRows.forEach((row) => {\r\n      options.add(row.values[id]);\r\n    });\r\n    return [...options.values()];\r\n  }, [id, preFilteredRows]);\r\n\r\n  // Render a multi-select box\r\n  return (\r\n    <label className=\"flex gap-x-2 items-baseline\">\r\n      <span className=\"text-gray-700\">{render(\"Header\")}: </span>\r\n      <select\r\n        className=\"mt-1 block rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n        name={id}\r\n        id={id}\r\n        value={filterValue}\r\n        onChange={(e) => {\r\n          setFilter(e.target.value || undefined);\r\n        }}\r\n      >\r\n        <option value=\"\">All</option>\r\n        {options.map((option, i) => (\r\n          <option key={i} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </label>\r\n  );\r\n}\r\n\r\n// export function StatusPill({ value }) {\r\n//   const status = value ? value.toLowerCase() : \"unknown\";\r\n\r\n//   return (\r\n//     <span\r\n//       className={classNames(\r\n//         \"px-3 py-1 uppercase leading-wide font-bold text-xs rounded-full shadow-sm\",\r\n//         status.startsWith(\"active\") ? \"bg-green-100 text-green-700\" : null,\r\n//         status.startsWith(\"inactive\") ? \"bg-yellow-100 text-yellow-700\" : null,\r\n//         status.startsWith(\"offline\") ? \"bg-red-100 text-red-700\" : null\r\n//       )}\r\n//     >\r\n//       {status}\r\n//     </span>\r\n//   );\r\n// }\r\n\r\nexport function LocateCell({ column, row }) {\r\n  const { map } = useMap();\r\n  function handleClick() {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    //console.log(flying);\r\n    map.flyTo(row.original[column.posAccessor]);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button onClick={() => handleClick()}>\r\n        <LocationMarkerIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Table({ columns, data }) {\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data\r\n    },\r\n    useFilters,\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n      <GlobalFilter\r\n        preGlobalFilteredRows={preGlobalFilteredRows}\r\n        globalFilter={state.globalFilter}\r\n        setGlobalFilter={setGlobalFilter}\r\n      />\r\n      {headerGroups.map((headerGroup) =>\r\n        headerGroup.headers.map((column) =>\r\n          column.Filter ? (\r\n            <div key={column.id}>{column.render(\"Filter\")}</div>\r\n          ) : null\r\n        )\r\n      )}\r\n      <div className=\"mt-2 flex flex-col\">\r\n        <div className=\"-my-2 overflow-x-auto -mx-4 sm:-mx-6 lg:-mx-8\">\r\n          <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n            <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\r\n              <table\r\n                {...getTableProps()}\r\n                className=\"min-w-full divide-y divide-gray-200\"\r\n              >\r\n                <thead className=\"bg-gray-50\">\r\n                  {headerGroups.map((headerGroup) => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                      {headerGroup.headers.map((column) => (\r\n                        // Add the sorting props to control sorting. For this example\r\n                        // we can add them into the header props\r\n                        <th\r\n                          scope=\"col\"\r\n                          className=\"group px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                          {...column.getHeaderProps(\r\n                            column.getSortByToggleProps()\r\n                          )}\r\n                        >\r\n                          <div className=\"flex items-center justify-between\">\r\n                            {column.render(\"Header\")}\r\n                            {/* Add a sort direction indicator */}\r\n                            <span>\r\n                              {column.isSorted ? (\r\n                                column.isSortedDesc ? (\r\n                                  <SortDownIcon className=\"w-4 h-4 text-gray-400\" />\r\n                                ) : (\r\n                                  <SortUpIcon className=\"w-4 h-4 text-gray-400\" />\r\n                                )\r\n                              ) : (\r\n                                <SortIcon className=\"w-4 h-4 text-gray-400 opacity-0 group-hover:opacity-100\" />\r\n                              )}\r\n                            </span>\r\n                          </div>\r\n                        </th>\r\n                      ))}\r\n                    </tr>\r\n                  ))}\r\n                </thead>\r\n                <tbody\r\n                  {...getTableBodyProps()}\r\n                  className=\"bg-white divide-y divide-gray-200\"\r\n                >\r\n                  {page.map((row, i) => {\r\n                    // new\r\n                    prepareRow(row);\r\n                    return (\r\n                      <tr {...row.getRowProps()}>\r\n                        {row.cells.map((cell) => {\r\n                          return (\r\n                            <td\r\n                              {...cell.getCellProps()}\r\n                              className=\"px-6 py-4 whitespace-nowrap\"\r\n                            >\r\n                              {cell.render(\"Cell\")}\r\n                            </td>\r\n                          );\r\n                        })}\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"py-3 flex items-center justify-between\">\r\n        <div className=\"flex-1 flex justify-between sm:hidden\">\r\n          <Button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n            Previous\r\n          </Button>\r\n          <Button onClick={() => nextPage()} disabled={!canNextPage}>\r\n            Next\r\n          </Button>\r\n        </div>\r\n        <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\r\n          <div className=\"flex gap-x-2\">\r\n            <span className=\"text-sm text-gray-700\">\r\n              Page <span className=\"font-medium\">{state.pageIndex + 1}</span> of{\" \"}\r\n              <span className=\"font-medium\">{pageOptions.length}</span>\r\n            </span>\r\n            <label>\r\n              <span className=\"sr-only\">Items Per Page</span>\r\n              <select\r\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n                value={state.pageSize}\r\n                onChange={(e) => {\r\n                  setPageSize(Number(e.target.value));\r\n                }}\r\n              >\r\n                {[5, 10, 20].map((pageSize) => (\r\n                  <option key={pageSize} value={pageSize}>\r\n                    Show {pageSize}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <nav\r\n              className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\"\r\n              aria-label=\"Pagination\"\r\n            >\r\n              <PageButton\r\n                className=\"rounded-l-md\"\r\n                onClick={() => gotoPage(0)}\r\n                disabled={!canPreviousPage}\r\n              >\r\n                <span className=\"sr-only\">First</span>\r\n                <ChevronDoubleLeftIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n              </PageButton>\r\n              <PageButton\r\n                onClick={() => previousPage()}\r\n                disabled={!canPreviousPage}\r\n              >\r\n                <span className=\"sr-only\">Previous</span>\r\n                <ChevronLeftIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n              </PageButton>\r\n              <PageButton onClick={() => nextPage()} disabled={!canNextPage}>\r\n                <span className=\"sr-only\">Next</span>\r\n                <ChevronRightIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n              </PageButton>\r\n              <PageButton\r\n                className=\"rounded-r-md\"\r\n                onClick={() => gotoPage(pageCount - 1)}\r\n                disabled={!canNextPage}\r\n              >\r\n                <span className=\"sr-only\">Last</span>\r\n                <ChevronDoubleRightIcon\r\n                  className=\"h-5 w-5\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              </PageButton>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\nimport Table, { SelectColumnFilter, LocateCell } from \"./Table\";\n\nexport default function TableData({ markerInfo }) {\n    // const getDataNodeRed = markerInfo\n    const columns = React.useMemo(\n        () => [\n            {\n                Header: \"ID\",\n                accessor: \"ID\"\n            },\n            {\n                Header: \"Equipment\",\n                accessor: \"equipment\",\n                Filter: SelectColumnFilter,\n                filter: \"includes\"\n            },\n            {\n                Header: \"Next Maintainance Date\",\n                accessor: \"maintainenceDue\"\n            },\n\n            // {\n            //   Header: \"Status\",\n            //   accessor: \"status\",\n            //   Cell: StatusPill\n            // },\n            {\n                Header: \"Locate\",\n                // accessor: \"locate\",\n                Cell: LocateCell,\n                posAccessor: \"posCoords\"\n            }\n            // {\n            //   Header: \"Role\",\n            //   accessor: \"role\",\n            //   Filter: SelectColumnFilter,\n            //   filter: \"includes\"\n            // }\n        ],\n        []\n    );\n\n    //const data = React.useMemo(() => markerInfo, []);\n\n    return (\n        <div className=\"min-h-screen bg-gray-100 text-gray-900\">\n            <main className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\">\n                <div className=\"\">\n                    <h1 className=\"text-xl font-semibold\">Find Transmitters</h1>\n                </div>\n                <div className=\"mt-4\">\n                    <Table columns={columns} data={markerInfo} />\n                    {/* <Table columns={columns} data={data} map={mapFly} /> */}\n                </div>\n            </main>\n        </div>\n    );\n}\n","/* This is where the uibuilder action happens */\r\nimport React, { Component } from 'react';\r\n//import ReactDOM from 'react-dom';\r\n//import { findDOMNode } from 'react-dom';\r\nimport Map from \"../Map\";\r\nimport TableData from \"../Table/TableData\"\r\n\r\nimport uibuilder from 'node-red-contrib-uibuilder/front-end/src/uibuilderfe'\r\n\r\nclass UserData extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        /** **REQUIRED** Start uibuilder comms with Node-RED @since v2.0.0-dev3\r\n         * Pass the namespace and ioPath variables if hosting page is not in the instance root folder\r\n         * e.g. If you get continual `uibuilderfe:ioSetup: SOCKET CONNECT ERROR` error messages.\r\n         * e.g. uibuilder.start('/nr/uib', '/nr/uibuilder/vendor/socket.io') // change to use your paths/names\r\n         */\r\n        uibuilder.start();\r\n\r\n        this.state = {\r\n            // Example of retrieving data from uibuilder\r\n            feVersion: uibuilder.get('version'),\r\n\r\n            socketConnectedState: false,\r\n            serverTimeOffset: '[unknown]',\r\n\r\n          msgRecvd: {\r\n            payload: []\r\n          },\r\n            msgsReceived: 0,\r\n            msgCtrl: '[Nothing]',\r\n            msgsControl: 0,\r\n\r\n            msgSent: '[Nothing]',\r\n            msgsSent: 0,\r\n            msgCtrlSent: '[Nothing]',\r\n            msgsCtrlSent: 0,\r\n        }\r\n\r\n        /** You can use the following to help trace how messages flow back and forth.\r\n         * You can then amend this processing to suite your requirements.\r\n         */\r\n\r\n        //#region ---- Trace Received Messages ---- //\r\n        // If msg changes - msg is updated when a standard msg is received from Node-RED over Socket.IO\r\n        // newVal relates to the attribute being listened to.\r\n        uibuilder.onChange('msg', (newVal) => {\r\n\r\n            this.setState({ 'msgRecvd': newVal });\r\n\r\n            console.info('[uibuilder.onChange] msg received from Node-RED server:', newVal);\r\n        })\r\n\r\n        // As we receive new messages, we get an updated count as well\r\n        uibuilder.onChange('msgsReceived', (newVal) => {\r\n            console.info('[uibuilder.onChange] Updated count of received msgs:', newVal);\r\n\r\n            this.setState({ 'msgsReceived': newVal });\r\n        })\r\n\r\n        // If we receive a control message from Node-RED, we can get the new data here - we pass it to a Vue variable\r\n        uibuilder.onChange('ctrlMsg', (newVal) => {\r\n            console.info('[uibuilder.onChange:ctrlMsg] CONTROL msg received from Node-RED server:', newVal);\r\n\r\n            this.setState({ 'msgCtrl': newVal });\r\n        })\r\n        // Updated count of control messages received\r\n        uibuilder.onChange('msgsCtrl', (newVal) => {\r\n            console.info('[uibuilder.onChange:msgsCtrl] Updated count of received CONTROL msgs:', newVal);\r\n\r\n            this.setState({ 'msgsControl': newVal });\r\n        })\r\n        //#endregion ---- End of Trace Received Messages ---- //\r\n\r\n        //#region ---- Trace Sent Messages ---- //\r\n        // You probably only need these to help you understand the order of processing //\r\n        // If a message is sent back to Node-RED, we can grab a copy here if we want to\r\n        uibuilder.onChange('sentMsg', (newVal) => {\r\n            console.info('[uibuilder.onChange:sentMsg] msg sent to Node-RED server:', newVal);\r\n\r\n            this.setState({ 'msgSent': newVal });\r\n        })\r\n        // Updated count of sent messages\r\n        uibuilder.onChange('msgsSent', (newVal) => {\r\n            console.info('[uibuilder.onChange:msgsSent] Updated count of msgs sent:', newVal);\r\n\r\n            this.setState({ 'msgsSent': newVal });\r\n        })\r\n\r\n        // If we send a control message to Node-RED, we can get a copy of it here\r\n        uibuilder.onChange('sentCtrlMsg', (newVal) => {\r\n            console.info('[uibuilder.onChange:sentCtrlMsg] Control message sent to Node-RED server:', newVal);\r\n\r\n            this.setState({ 'msgCtrlSent': newVal });\r\n        })\r\n        // And we can get an updated count\r\n        uibuilder.onChange('msgsSentCtrl', (newVal) => {\r\n            console.info('[uibuilder.onChange:msgsSentCtrl] Updated count of CONTROL msgs sent:', newVal);\r\n\r\n            this.setState({ 'msgsCtrlSent': newVal });\r\n        })\r\n        //#endregion ---- End of Trace Sent Messages ---- //\r\n\r\n        // If Socket.IO connects/disconnects, we get true/false here\r\n        uibuilder.onChange('ioConnected', (newVal) => {\r\n            console.info('[uibuilder.onChange:ioConnected] Socket.IO Connection Status Changed to:', newVal)\r\n\r\n            this.setState({ 'socketConnectedState': newVal })\r\n        })\r\n        // If Server Time Offset changes\r\n        uibuilder.onChange('serverTimeOffset', (newVal) => {\r\n            console.info('[uibuilder.onChange:serverTimeOffset] Offset of time between the browser and the server has changed to:', newVal)\r\n\r\n            this.setState({ 'serverTimeOffset': newVal })\r\n        })\r\n\r\n        //Manually send a message back to Node-RED after 2 seconds\r\n        window.setTimeout(function () {\r\n            console.info('Sending a message back to Node-RED-after2sdelay')\r\n            uibuilder.send({ 'topic': 'uibuilderfe', 'payload': 'I am a message sent from the uibuilder front end' })\r\n        }, 2000)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {/*<div ref=\"root\" style={{ height: \"50vh\" }}>\r\n                <hr></hr>\r\n                <div className=\"d1\">\r\n                    <div>Last msg Received:</div>\r\n                    <pre><code>{JSON.stringify(this.state.msgRecvd, null, 2)}</code></pre>\r\n                    <div># Msgs Received: {this.state.msgsReceived}</div>\r\n                </div>\r\n\r\n                <div className=\"d1\">\r\n                    <div>last Ctl Msg Received:</div>\r\n                    <pre><code>{JSON.stringify(this.state.msgCtrl, null, 2)}</code></pre>\r\n                    <div># Control Msgs Received: {this.state.msgsControl}</div>\r\n                </div>\r\n\r\n                <div className=\"d1\">\r\n                    <div>last Msg Sent</div>\r\n                    <pre><code>{JSON.stringify(this.state.msgSent, null, 2)}</code></pre>\r\n                    <div># msgs Sent: {this.state.msgsSent}</div>\r\n                </div>\r\n\r\n                <div className=\"d1\">\r\n                    <div>Socket Connected?: {this.state.socketConnectedState}</div>\r\n                    <div>uibuilderfe Version: {this.state.feVersion}</div>\r\n                    <div>Server Time Offset from browser: {this.state.serverTimeOffset}</div>\r\n                </div>\r\n\r\n            </div>*/}\r\n            <Map markerInfo={this.state.msgRecvd.payload} />\r\n            <TableData markerInfo={this.state.msgRecvd.payload} />\r\n            </>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default UserData","import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport { MapProvider } from \"./map-context\";\nimport UserData from \"./scenes/UserData\";\n\nexport default function App() {\n  return (\n      <div className=\"App\" style={{ height: \"100%\" }}>\n        <MapProvider>\n          <UserData />\n          \n        </MapProvider>\n      </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}